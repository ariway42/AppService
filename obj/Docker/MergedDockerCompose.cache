networks:
  app-tier:
    driver: bridge
services:
  consoleserviceapp:
    build:
      context: E:\microservices 2022\UserService
      dockerfile: OrderProcessor/Dockerfile
    image: orderprocessor
    networks:
      app-tier: {}
  kafka:
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    hostname: kafkaserver
    image: docker.io/bitnami/kafka
    links:
    - zookeeper
    networks:
      app-tier: {}
    ports:
    - published: 9092
      target: 9092
    volumes:
    - E:\microservices 2022\UserService\kafka_data:/bitnami:rw
  servicea:
    build:
      context: E:\microservices 2022\UserService
      dockerfile: OrderService/Dockerfile
    image: orderservice
    networks:
      app-tier: {}
  serviceb:
    build:
      context: E:\microservices 2022\UserService
      dockerfile: ProductService/Dockerfile
    image: productservice
    networks:
      app-tier: {}
  servicec:
    build:
      context: E:\microservices 2022\UserService
      dockerfile: UserService/Dockerfile
    image: userservice
    networks:
      app-tier: {}
  zookeeper:
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: docker.io/bitnami/zookeeper
    networks:
      app-tier: {}
    ports:
    - published: 2282
      target: 2282
    volumes:
    - E:\microservices 2022\UserService\zookeeper_data:/bitnami:rw
version: '3.4'
volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local